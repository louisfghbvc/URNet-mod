URN(
  (sub_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (add_mean): MeanShift(3, 3, kernel_size=(1, 1), stride=(1, 1))
  (head): ACBlock(
    (square_conv): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (ver_conv_crop_layer): Identity()
    (hor_conv_crop_layer): Identity()
    (ver_conv): Conv2d(3, 64, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0), bias=False)
    (hor_conv): Conv2d(3, 64, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1), bias=False)
  )
  (down): ModuleList(
    (0): RFDBBlock(
      (block): Sequential(
        (0): E_RFDB(
          (c1_d): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          (c1_r): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c2_d): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          (c2_r): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c3_d): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          (c3_r): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): LeakyReLU(negative_slope=0.05, inplace=True)
          (c5): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
          (esa): ESA(
            (conv1): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
            (conv_f): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
            (conv_max): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2))
            (conv3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv3_): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv4): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
            (sigmoid): Sigmoid()
            (relu): ReLU(inplace=True)
          )
        )
        (1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (1): RFDBBlock(
      (block): Sequential(
        (0): E_RFDB(
          (c1_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
          (c1_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c2_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
          (c2_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c3_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
          (c3_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c4): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): LeakyReLU(negative_slope=0.05, inplace=True)
          (c5): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          (esa): ESA(
            (conv1): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))
            (conv_f): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
            (conv_max): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv2): Conv2d(8, 8, kernel_size=(3, 3), stride=(2, 2))
            (conv3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv3_): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv4): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
            (sigmoid): Sigmoid()
            (relu): ReLU(inplace=True)
          )
        )
        (1): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (2): RFDBBlock(
      (block): Sequential(
        (0): E_RFDB(
          (c1_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
          (c1_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c2_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
          (c2_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c3_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
          (c3_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c4): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): LeakyReLU(negative_slope=0.05, inplace=True)
          (c5): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
          (esa): ESA(
            (conv1): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1))
            (conv_f): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
            (conv_max): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv2): Conv2d(4, 4, kernel_size=(3, 3), stride=(2, 2))
            (conv3): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv3_): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv4): Conv2d(4, 16, kernel_size=(1, 1), stride=(1, 1))
            (sigmoid): Sigmoid()
            (relu): ReLU(inplace=True)
          )
        )
        (1): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (3): RFDBBlock(
      (block): Sequential(
        (0): E_RFDB(
          (c1_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
          (c1_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c2_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
          (c2_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c3_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
          (c3_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (c4): Conv2d(8, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): LeakyReLU(negative_slope=0.05, inplace=True)
          (c5): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
          (esa): ESA(
            (conv1): Conv2d(8, 2, kernel_size=(1, 1), stride=(1, 1))
            (conv_f): Conv2d(2, 2, kernel_size=(1, 1), stride=(1, 1))
            (conv_max): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv2): Conv2d(2, 2, kernel_size=(3, 3), stride=(2, 2))
            (conv3): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv3_): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (conv4): Conv2d(2, 8, kernel_size=(1, 1), stride=(1, 1))
            (sigmoid): Sigmoid()
            (relu): ReLU(inplace=True)
          )
        )
      )
    )
  )
  (up): ModuleList(
    (0): FDPRG(
      (m1): E_RFDB(
        (c1_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(8, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(8, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(2, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(2, 2, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(2, 8, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (m2): E_RFDB(
        (c1_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(8, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(8, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(2, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(2, 2, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(2, 8, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (m3): E_RFDB(
        (c1_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(8, 4, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(8, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(8, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(2, 2, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(2, 2, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(2, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(2, 8, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (aspp): CFPB(
        (atrous_block3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
        (atrous_block6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
        (convs): ModuleList(
          (0): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        )
        (fuse_conv): Conv2d(24, 8, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (1): FDPRG(
      (m1): E_RFDB(
        (c1_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(4, 4, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(4, 16, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (m2): E_RFDB(
        (c1_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(4, 4, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(4, 16, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (m3): E_RFDB(
        (c1_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(16, 4, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(4, 4, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(4, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(4, 16, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (aspp): CFPB(
        (atrous_block3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
        (atrous_block6): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
        (convs): ModuleList(
          (0): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        )
        (fuse_conv): Conv2d(48, 16, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (2): FDPRG(
      (m1): E_RFDB(
        (c1_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(8, 8, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (m2): E_RFDB(
        (c1_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(8, 8, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (m3): E_RFDB(
        (c1_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c1_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c2_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c2_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c3_d): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1))
        (c3_r): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (c4): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (act): LeakyReLU(negative_slope=0.05, inplace=True)
        (c5): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
        (esa): ESA(
          (conv1): Conv2d(32, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv_f): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
          (conv_max): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): Conv2d(8, 8, kernel_size=(3, 3), stride=(2, 2))
          (conv3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv3_): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv4): Conv2d(8, 32, kernel_size=(1, 1), stride=(1, 1))
          (sigmoid): Sigmoid()
          (relu): ReLU(inplace=True)
        )
      )
      (aspp): CFPB(
        (atrous_block3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(3, 3), dilation=(3, 3))
        (atrous_block6): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
        (convs): ModuleList(
          (0): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
          (1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
        )
        (fuse_conv): Conv2d(96, 32, kernel_size=(1, 1), stride=(1, 1))
      )
      (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (3): E_RFDB(
      (c1_d): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      (c1_r): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (c2_d): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      (c2_r): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (c3_d): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
      (c3_r): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (c4): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act): LeakyReLU(negative_slope=0.05, inplace=True)
      (c5): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
      (esa): ESA(
        (conv1): Conv2d(64, 16, kernel_size=(1, 1), stride=(1, 1))
        (conv_f): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1))
        (conv_max): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2))
        (conv3): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3_): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv4): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1))
        (sigmoid): Sigmoid()
        (relu): ReLU(inplace=True)
      )
    )
  )
  (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (anrb): ANRB(
    (pool): MaxPool2d(kernel_size=(1, 1), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (f_query): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    (f_key): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    (f_value): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
    (psp): PSPModule(
      (stages): ModuleList(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): AdaptiveAvgPool2d(output_size=(3, 3))
        (2): AdaptiveAvgPool2d(output_size=(6, 6))
        (3): AdaptiveAvgPool2d(output_size=(8, 8))
      )
    )
    (W): Conv2d(1, 64, kernel_size=(1, 1), stride=(1, 1))
  )
  (tail_up): Sequential(
    (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
  )
)
[Epoch 1]	Learning rate: 5.00e-4
[3200/32000]	[L1: 10.3385][canny: 10.2751][Total: 20.6136]	20.9+0.8s
